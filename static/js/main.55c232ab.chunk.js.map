{"version":3,"sources":["components/Header.js","components/TodoItem.js","components/MainBody.js","components/Footer.js","App.js","index.js"],"names":["Header","props","onClick","onSubmit","userText","onChange","react_default","a","createElement","className","placeholder","autoFocus","value","TodoItem","completed","text","onDeleteItem","type","checked","MainBody","id","htmlFor","todoItems","map","todoItem","number","components_TodoItem","index","key","Footer","length","name","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onTextFieldChange","event","eValue","target","setState","onCheckboxChange","prevState","copyTodoArr","toConsumableArray","objectSpread","e","preventDefault","prev","classForCompleted","Date","now","concat","copyTodo","splice","state","components_Header","todoitems","components_MainBody","components_Footer","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.55c232ab.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Header(props) {\r\n    const { onClick, onSubmit, userText, onChange } = props;\r\n    return (\r\n        <header className=\"header\">\r\n            <h1 onClick={onClick}>todos App</h1>\r\n                <form onSubmit={onSubmit}>\r\n                    <input\r\n                        className=\"new-todo\"\r\n                        placeholder=\"What needs to be done?\"\r\n                        autoFocus=\"\"\r\n                        value={userText}\r\n                        onChange={onChange}\r\n                    />\r\n                </form>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nfunction TodoItem(props) {\r\n  const { completed, onChange, text, onDeleteItem } = props;\r\n  return (\r\n    <li className={completed ? \"completed\" : null}>\r\n      <div className=\"view\">\r\n        <input\r\n          className=\"toggle\"\r\n          type=\"checkbox\"\r\n          checked={completed}\r\n          onChange={onChange}\r\n        />\r\n        <label>{text}</label>\r\n        <button\r\n          className=\"destroy\"\r\n          onClick={onDeleteItem}\r\n        ></button>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default TodoItem\r\n","import React from 'react'\r\nimport TodoItem from './TodoItem'\r\n\r\nfunction MainBody(props) {\r\n    return (\r\n        <section className=\"main\">\r\n            <input id=\"toggle-all\" className=\"toggle-all\" type=\"checkbox\"/>\r\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\r\n            <ul className=\"todo-list\">\r\n                {props.todoItems.map((todoItem, number) => {\r\n                    return (\r\n                        <TodoItem\r\n                            text={todoItem.text}\r\n                            completed={todoItem.completed}\r\n                            index={number}\r\n                            onChange={() => props.onChange(number)}\r\n                            onDeleteItem={() => props.onDeleteItem(number)}\r\n                            key={number}\r\n                        />\r\n                    )\r\n                })}\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default MainBody\r\n","import React from 'react'\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <span className=\"todo-count\"><strong>{props.todoItems.length}</strong> items left</span>\r\n            <form className=\"filters\">\r\n                <label className=\"selected\">\r\n                    All\r\n                    <input type=\"radio\" name=\"filter\" />\r\n                </label>\r\n                <label>\r\n                    Active\r\n                    <input type=\"radio\" name=\"filter\" />\r\n                </label>\r\n                <label>\r\n                    Completed\r\n                    <input type=\"radio\" name=\"filter\" />\r\n                </label>\r\n            </form>\r\n            <button className=\"clear-completed\"></button>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\nimport './App.css'\nimport Header from './components/Header'\nimport MainBody from './components/MainBody'\nimport Footer from './components/Footer'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoItems: [],\n      userText: '',\n    }\n  };\n\n  onTextFieldChange = (event) => {\n    const eValue = event.target.value;\n\n    this.setState({\n        userText: eValue\n      }\n    )\n  };\n  onCheckboxChange = (number) => {\n    this.setState((prevState) => {\n      const copyTodoArr = [...prevState.todoItems];\n\n      copyTodoArr[number] = {\n        ...copyTodoArr[number],\n        completed: !copyTodoArr[number].completed\n      };\n\n      return {\n        todoItems: copyTodoArr\n      }\n    })\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.setState((prev) => {\n      return {\n        todoItems: [\n          {\n            text: prev.userText,\n            completed: false,\n            classForCompleted: null,\n            id: Date.now()\n          },\n          ...prev.todoItems\n        ],\n        userText: ''\n      }\n    });\n  };\n\n  onDeleteItem = (number) => {\n    this.setState((prev) => {\n      const copyTodo = [...prev.todoItems];\n      copyTodo.splice(number, 1);\n      return {\n        todoItems: [...copyTodo]\n      }\n    })\n  };\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <Header\n          todoitems={this.state.todoItems}\n          onChange={this.onTextFieldChange}\n          userText={this.state.userText}\n          onSubmit={this.onSubmit}\n          onClick={this.onClick}\n        />\n        <MainBody\n          todoItems={this.state.todoItems}\n          onChange={this.onCheckboxChange}\n          onDeleteItem={this.onDeleteItem}\n        />\n        {this.state.todoItems.length > 0 ? <Footer todoItems={this.state.todoItems}/> : null}\n      </section>\n    )\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}